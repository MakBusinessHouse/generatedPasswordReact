{"version":3,"sources":["App.js","message.js","character.js","reportWebVitals.js","index.js"],"names":["App","useState","password","setPassword","passwordLength","setpasswordLength","includeUpperCase","setIncludeUpperCase","includelowerCase","setIncludelowerCase","includeNumber","setIncludeNumber","includesymbol","setIncludesymbol","createPassword","characterList","characterListLength","length","i","characterIndex","Math","round","random","charAt","notify","message","hasError","toast","error","position","autoclose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","onClick","e","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","htmlFor","defaultValue","onChange","target","value","type","id","name","min","max","checked","newestOnTop","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e03ee5a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { upperCaseLetters, lowerCaseLetters, specialCharacters, numbers } from './character.js'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { COPY_SUCCESS, MUST_SELECT, NOTHING_TO_COPY } from './message.js'\nimport './App.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nfunction App() {\n  const [password, setPassword] = useState('')\n  const [passwordLength, setpasswordLength] = useState('20')\n  const [includeUpperCase, setIncludeUpperCase] = useState(false)\n  const [includelowerCase, setIncludelowerCase] = useState(false)\n  const [includeNumber, setIncludeNumber] = useState(false)\n  const [includesymbol, setIncludesymbol] = useState(false)\n\n  const handleGeneratePassword = (e) => {\n\n\t\tif(!includeUpperCase && !includelowerCase &&!includesymbol &&!includeNumber) {\n\t\t\tnotify(MUST_SELECT, true)\n\t\t}\n\n    let characterList = '';\n    if(includeUpperCase) {\n      characterList = characterList + upperCaseLetters\n    }\n    if(includelowerCase) {\n      characterList = characterList + lowerCaseLetters\n    }\n    if(includesymbol) {\n      characterList = characterList + numbers\n    }\n    if(includeNumber) {\n      characterList = characterList + specialCharacters\n    }\n     setPassword(createPassword(characterList))\n  }\n  const createPassword = (characterList) => {\n    let password = ''\n    const characterListLength = characterList.length\n\n    for (let i = 0; i < passwordLength; i++) {\n      const characterIndex = Math.round(Math.random() * characterListLength)\n      password = password + characterList.charAt(characterIndex)\n    }\n    return password\n  }\n\n  const copyToClipboard = (e) => {\n\t\tconst newTextArea = document.createElement('textarea')\n\t\tnewTextArea.innerText = password\n\t\tdocument.body.appendChild(newTextArea)\n\t\tnewTextArea.select()\n\t\tdocument.execCommand('copy')\n\t\tnewTextArea.remove()\n\t}\n\n\tconst notify = (message, hasError = false) => {\n\t\tif(hasError) {\n\t\t\ttoast.error(message, {\n\t\t\tposition: \"top-center\",\n\t\t\tautoclose: 5000,\n\t\t\thideProgressBar: false,\n\t\t\tcloseOnClick: true,\n\t\t\tpauseOnHover: true,\n\t\t\tdraggable: true,\n\t\t\tprogress: undefined,\n\t\t\t})\n\t\t}\telse {\n\t\t\ttoast(message, {\n\t\t\tposition: \"top-center\",\n\t\t\tautoclose: 5000,\n\t\t\thideProgressBar: false,\n\t\t\tcloseOnClick: true,\n\t\t\tpauseOnHover: true,\n\t\t\tdraggable: true,\n\t\t\tprogress: undefined,\n\t\t\t})\n\t\t}\n\t}\n\n  const handleCopyPassword = (e) => {\n\t\tif(password === '') {\n\t\t\tnotify(NOTHING_TO_COPY, true)\n\t\t}\telse {\n\t    copyToClipboard()\n\t\t\tnotify(COPY_SUCCESS)\n\t\t}\n  }\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='generator'>\n\t\t\t\t\t<h2 className='generator__header'>Password Generator</h2>\n\t\t\t\t\t<div className='generator__password'>\n\t\t\t\t\t\t<h2>{password}</h2>\n\t\t\t\t\t\t<button onClick={handleCopyPassword} className='copy__btn'>\n\t\t\t\t\t\t\t<i className='far fa-clipboard'></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='password-lenght'>Password Lenght</label>\n\t\t\t\t\t\t<input\n              defaultValue={passwordLength}\n              onChange={(e) => setpasswordLength(e.target.value)}\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tid='password-lenght'\n\t\t\t\t\t\t\tname='password-lenght'\n              min=\"8\"\n              max=\"20\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='upperCase-letters'>Include UpperCase Letter</label>\n\t\t\t\t\t\t<input\n              checked={includeUpperCase}\n              onChange={(e) => setIncludeUpperCase(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tid='upperCase-letters'\n\t\t\t\t\t\t\tname='upperCase-letters'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='lowercase-letters'>Include Lowercase Letter</label>\n\t\t\t\t\t\t<input\n              checked={includelowerCase}\n              onChange={(e) => setIncludelowerCase(e.target.checked)}\n              type='checkbox'\n\t\t\t\t\t\t\tid='lowercase-letters'\n\t\t\t\t\t\t\tname='lowercase-letters'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='include-numbers'>Include Numbers</label>\n\t\t\t\t\t\t<input\n              checked={includeNumber}\n              onChange={(e) => setIncludeNumber(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tid='include-numbers'\n\t\t\t\t\t\t\tname='include-numbers'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='lowercase-symbols'>Include Symbols</label>\n\t\t\t\t\t\t<input\n              checked={includesymbol}\n              onChange={(e) => setIncludesymbol(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tid='lowercase-symbols'\n\t\t\t\t\t\t\tname='lowercase-symbols'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button onClick={handleGeneratePassword} className='generator__password'>Generate Password</button>\n\t\t\t\t\t<ToastContainer\n\t\t\t\t\t\tposition=\"top-center\"\n\t\t\t\t\t\tautoclose={5000}\n\t\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\t\tnewestOnTop={false}\n\t\t\t\t\t\tcloseOnClick\n\t\t\t\t\t\trtl={false}\n\t\t\t\t\t\tpauseOnFocusLoss\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\tpauseOnHover\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export const COPY_SUCCESS = 'Password Successfully copied to clipboard'\r\nexport const MUST_SELECT = 'You must Select atleast one option'\r\nexport const NOTHING_TO_COPY = 'Nothing to copy'","export const numbers = '0123456789'\r\nexport const upperCaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\nexport const lowerCaseLetters = 'abcdefghijklmnopqrstuvwxyz'\r\nexport const specialCharacters = '!\"^+%&/()=?_#$½§{[]}|;:>÷`<.*-@é'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}